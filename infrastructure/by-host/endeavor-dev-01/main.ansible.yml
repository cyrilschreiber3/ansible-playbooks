---
- name: Configure dev LXC Endeavour-DEV-01
  hosts: endeavor-dev-01
  gather_facts: true

  handlers:
    - name: Import handlers
      ansible.builtin.import_tasks:
        file: "{{ playbook_dir }}/handlers/main.ansible.yml"

  tasks:
    - name: Prerequisites
      block:
        - name: Run OS-specific role
          ansible.builtin.include_role:
            name: debian

        - name: Install basic packages
          ansible.builtin.apt:
            name:
              - curl
              - git
              - ufw
              - unzip
            update_cache: true
            state: present

    - name: Network configuration
      block:
        - name: Allow OpenSSH in UFW
          community.general.ufw:
            rule: allow
            name: "OpenSSH"

        - name: Set logging for UFW
          community.general.ufw:
            logging: "on"

        - name: Enable UFW
          community.general.ufw:
            state: enabled

    - name: Configure Nix
      ansible.builtin.include_role:
        name: nix_package_manager
      vars:
        nix_package_manager_configure_bash: true

    - name: Configure Shell
      block:
        - name: Set Zsh as default shell
          ansible.builtin.command:
            cmd: chsh -s /root/.nix-profile/bin/zsh
          when: ansible_user_shell != '/root/.nix-profile/bin/zsh'
          changed_when: true

        - name: Copy Zsh configuration
          ansible.builtin.template:
            src: "{{ playbook_dir }}/templates/zshrc.j2"
            dest: /root/.zshrc
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: "0644"

    - name: Configure Git and GPG
      ansible.builtin.import_tasks:
        file: "{{ playbook_dir }}/tasks/git_gpg.ansible.yml"

    - name: Configure VSCode tunnel server
      block:
        - name: Stat code
          ansible.builtin.stat:
            path: /usr/local/bin/code
          register: code_stat

        - name: Get current VSCode cli version # noqa: risky-shell-pipe
          ansible.builtin.shell: |
            code --version | awk '{print $2}'
          changed_when: false
          when: code_stat.stat.exists
          register: current_vscode_version

        - name: Get latest version of VSCode cli
          ansible.builtin.uri:
            url: "https://update.code.visualstudio.com/api/releases/stable"
            body_format: json
            return_content: true
            method: GET
          register: vscode_versions

        - name: Set latest VSCode version
          ansible.builtin.set_fact:
            vscode_version: "{{ vscode_versions.json[0] }}"

        - name: Install VSCode cli
          when: (not code_stat.stat.exists) or current_vscode_version.stdout != vscode_version
          notify: restart_codetunnel
          block:
            - name: Download VSCode cli
              ansible.builtin.get_url:
                url: "https://update.code.visualstudio.com/{{ vscode_version }}/cli-linux-x64/stable"
                dest: "/tmp/vscode_cli_{{ vscode_version }}.tar.gz"
                mode: "0644"

            - name: Extract VSCode cli
              ansible.builtin.unarchive:
                src: "/tmp/vscode_cli_{{ vscode_version }}.tar.gz"
                dest: "/opt"
                mode: "0755"
                remote_src: true

            - name: Symlink VSCode cli
              ansible.builtin.file:
                src: "/opt/code"
                dest: /usr/local/bin/code
                state: link

            - name: Create systemd service for VSCode tunnel
              ansible.builtin.template:
                src: "{{ playbook_dir }}/templates/code-tunnel.service.j2"
                dest: /etc/systemd/system/code-tunnel.service
                mode: "0644"
                owner: root
                group: root

        - name: Check for login
          block:
            - name: Get service last log line
              ansible.builtin.command:
                cmd: journalctl -u code-tunnel --no-pager --lines 1
              register: code_tunnel_logs
              failed_when: false
              changed_when: false

            - name: Display login info
              ansible.builtin.debug:
                msg: "{{ code_tunnel_logs.stdout }}"
              when: "'To grant access to the server, please log into https://github.com/login/device' in code_tunnel_logs.stdout"
