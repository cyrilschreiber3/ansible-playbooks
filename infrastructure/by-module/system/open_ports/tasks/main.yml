---
# tasks file for open_ports
- name: Open ports
  when: services is defined and services | length > 0
  block:
    - name: Process port definitions into normalized format
      ansible.builtin.include_tasks:
        file: "{{ role_path }}/tasks/process_ports.ansible.yml"

    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Install UFW if no firewall is running
      ansible.builtin.include_tasks:
        file: "{{ role_path }}/tasks/install_ufw.ansible.yml"
      when:
        - ansible_facts.services['firewalld.service'] is not defined and ansible_facts.services['firewalld'] is not defined
        - ansible_facts.services['ufw.service'] is not defined and ansible_facts.services['ufw'] is not defined

    - name: Open ports with ufw
      become: yes
      community.general.ufw:
        rule: allow
        port: "{{ item.service_port_ufw }}"
        proto: "{{ item.service_protocol }}"
        state: reloaded
      with_items: "{{ normalized_services }}"
      loop_control:
        label: "{{ item.service_name }}"
      when:
        - ansible_facts.services['ufw.service'] is defined or ansible_facts.services['ufw'] is defined
        - ansible_facts.services['ufw.service'].state == 'running' or ansible_facts.services['ufw'].state == 'running'

    - name: Open ports with firewalld
      become: yes
      ansible.posix.firewalld:
        port: "{{ item.service_port_firewalld }}/{{ item.service_protocol }}"
        permanent: yes
        state: enabled
        immediate: yes
      with_items: "{{ normalized_services }}"
      loop_control:
        label: "{{ item.service_name }}"
      when:
        - ansible_facts.services['firewalld.service'] is defined or ansible_facts.services['firewalld'] is defined
        - ansible_facts.services['firewalld.service'].state == 'running' or ansible_facts.services['firewalld'].state == 'running'
