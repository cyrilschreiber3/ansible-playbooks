---
# defaults file for k3s_cluster
k3s_version: v1.33.1+k3s1
# this is the user that has ssh access to these machines
ansible_user: admin
systemd_dir: /etc/systemd/system
k3s_server_location: /var/lib/rancher/k3s

k3s_create_kubectl_symlink: true

# configures the main ansible user to have kubectl access
config_user_kubectl: true

master_group: masters
worker_group: workers

# interface which will be used for flannel
flannel_iface: eth0

# apiserver_endpoint is virtual ip-address which will be configured on each master
apiserver_endpoint: 192.168.30.222
apiserver_port: 6443
apiserver_aliases: []

# k3s_token is required  masters can talk together securely
# this token should be alpha numeric only
k3s_token: some-SUPER-DEDEUPER-secret-password

# The IP on which the node is reachable in the cluster.
# Here, a sensible default is provided, you can still override
# it for each of your hosts, though.
k3s_node_ip: "{{ lookup('vars', ('ansible_' + flannel_iface)).ipv4.address }}"

# Disable the taint manually by setting: k3s_master_taint = false
k3s_master_taint: "{{ true if groups[worker_group] | default([]) | length >= 1 else false }}"

# these arguments are recommended for servers as well as agents:
extra_args: >-
  --flannel-iface={{ flannel_iface }}
  --node-ip={{ k3s_node_ip }}

# change these to your liking, the only required are: --disable servicelb, --tls-san {{ apiserver_endpoint }}
# the contents of the if block is also required if using calico or cilium
extra_server_args: >-
  {{ extra_args }}
  {{ '--node-taint node-role.kubernetes.io/master=true:NoSchedule' if k3s_master_taint else '' }}
  --tls-san {{ apiserver_endpoint }}
  --tls-san {{ k3s_node_ip }}
  {% for san in apiserver_aliases %}
  --tls-san {{ san }}
  {% endfor %}
  --disable servicelb
  --disable traefik

extra_agent_args: >-
  {{ extra_args }}

server_init_args: >-
  {% if groups[master_group] | length > 1 %}
    {% if inventory_hostname == groups[master_group][0] or ansible_host == groups[master_group][0] %}
      --cluster-init
    {% else %}
    --server https://{{ hostvars[groups[master_group][0]].k3s_node_ip | split(",") | first | ansible.utils.ipwrap }}:{{ apiserver_port }}
    {% endif %}
    --token {{ k3s_token }}
  {% endif %}
  {{ extra_server_args }}

# image tag for kube-vip
kube_vip_tag_version: v0.9.2
# tag for kube-vip-cloud-provider manifest
# kube_vip_cloud_provider_tag_version: "main"

# kube-vip ip range for load balancer
# (uncomment to use kube-vip for services instead of MetalLB)
# kube_vip_lb_ip_range: "192.168.30.80-192.168.30.90"

# enable kube-vip ARP broadcasts
kube_vip_arp: true
