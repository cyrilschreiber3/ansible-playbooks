---
# tasks file for zabbix
- name: Extend group_names based on server characteristics
  ansible.builtin.set_fact:
    custom_group_names: |
      {% set groups = [] %}
      {% if ansible_docker0 is defined %}
        {% set groups = groups + ['docker_host'] %}
      {% endif %}
      {% if 'kvm' in ansible_virtualization_type %}
        {% set groups = groups + ['vm'] %}
      {% elif 'lxc' in ansible_virtualization_type %}
        {% set groups = groups + ['lxc'] %}
      {% else %}
        {% set groups = groups + ['bare_metal'] %}
      {% endif %}
      {% set hostname_parts = inventory_hostname.split('-') %}
      {% if hostname_parts | length > 1 %}
        {% set groups = groups + [hostname_parts[1]] %}
      {% endif %}
      {% set groups = groups + [ansible_distribution] %}
      {{ groups | unique | join(',') }}

- name: Install the Zabbix agent for RedHat
  ansible.builtin.include_tasks:
    file: "{{ role_path }}/tasks/manual_install_rhel.ansible.yml"
  when: ansible_os_family == "RedHat"

- name: Install the Zabbix agent for CentOS
  ansible.builtin.include_tasks:
    file: "{{ role_path }}/tasks/manual_install_centos.ansible.yml"
  when: ansible_os_family == "CentOS"

- name: Install the Zabbix agent for Debian
  ansible.builtin.include_tasks:
    file: "{{ role_path }}/tasks/manual_install_debian.ansible.yml"
  when: ansible_os_family == "Debian"

- name: Install the Zabbix agent for Alpine
  ansible.builtin.include_tasks:
    file: "{{ role_path }}/tasks/manual_install_alpine.ansible.yml"
  when: ansible_os_family == "Alpine"

- name: Copy the Zabbix agent configuration file
  become: yes
  ansible.builtin.template:
    src: templates/zabbix_agent2.conf.j2
    dest: /etc/zabbix/zabbix_agent2.conf
    mode: 0644
  notify:
    - restart_zabbix_agent
    - set_zabbix_at_boot
  when: agent_variant == 2

- name: Add Zabbix user to docker group
  become: true
  ansible.builtin.user:
    name: "zabbix"
    groups: docker
    append: yes
  when: "'docker_servers' in group_names"

- name: Create sudoers file for Zabbix user
  become: yes
  ansible.builtin.copy:
    dest: /etc/sudoers.d/zabbix
    content: |
      zabbix ALL=(ALL) NOPASSWD: ALL
      Defaults:zabbix !requiretty
    owner: root
    group: root
    mode: 0440
  when: ansible_os_family != "Alpine"
  notify:
    - restart_zabbix_agent

- name: Create sudoers file for Zabbix user (Alpine)
  become: yes
  ansible.builtin.copy:
    dest: /etc/doas.d/zabbix.conf
    content: |
      permit persist zabbix
      permit nopass zabbix as root cmd *
    owner: root
    group: root
    mode: 0440
  when: ansible_os_family == "Alpine"
  notify:
    - restart_zabbix_agent

- name: Open firewall ports for Zabbix agent
  ansible.builtin.include_tasks:
    file: "{{ role_path }}/tasks/open_firewall_ports.ansible.yml"
  vars:
    services:
      - service_name: zabbix_agent
        service_port: "{{ agent_param_listenport }}"
        service_protocol: tcp
